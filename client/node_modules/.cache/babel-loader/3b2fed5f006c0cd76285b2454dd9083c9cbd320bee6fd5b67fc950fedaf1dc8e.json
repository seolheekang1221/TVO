{"ast":null,"code":"var _jsxFileName = \"/Users/seolheekang/Desktop/tvo/weather-app/client/src/components/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport './MainPage.css';\nimport cities from '../assets/cities.json';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customIcon = new L.Icon({\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n  shadowSize: [41, 41]\n});\nconst MainPage = ({\n  user\n}) => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n  const [city, setCity] = useState('');\n  const [searchedWeather, setSearchedWeather] = useState(null);\n  const [searchError, setSearchError] = useState('');\n  const [searches, setSearches] = useState(user ? user.searches : []);\n  const [currentPage, setCurrentPage] = useState(0);\n  const itemsPerPage = 5;\n  useEffect(() => {\n    if (user && user.searches) {\n      setSearches([...user.searches].reverse());\n    }\n  }, [user]);\n  const getWeather = async (lat, lon) => {\n    try {\n      const geocodeResponse = await axios.get(`http://api.openweathermap.org/geo/1.0/reverse`, {\n        params: {\n          lat: lat,\n          lon: lon,\n          limit: 1,\n          appid: process.env.REACT_APP_OPENWEATHER_API_KEY\n        }\n      });\n      const cityNameInEnglish = geocodeResponse.data[0].name;\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\n        params: {\n          lat: lat,\n          lon: lon,\n          appid: process.env.REACT_APP_OPENWEATHER_API_KEY\n        }\n      });\n      const weatherData = response.data;\n      const temperatureInCelsius = (weatherData.main.temp - 273.15).toFixed(1);\n      const timezoneOffset = weatherData.timezone;\n      const utcTime = Date.now() + new Date().getTimezoneOffset() * 60000;\n      const localDate = new Date(utcTime + timezoneOffset * 1000);\n      const localTime = localDate.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      const localDateString = `${localDate.toLocaleDateString([], {\n        month: 'long',\n        day: 'numeric'\n      })} (${localDate.toLocaleDateString([], {\n        weekday: 'short'\n      })})`;\n      setWeather({\n        ...weatherData,\n        name: cityNameInEnglish,\n        main: {\n          ...weatherData.main,\n          temp: temperatureInCelsius\n        },\n        localTime,\n        localDateString\n      });\n      setError('');\n      setSearchedWeather(null);\n      if (user) {\n        await saveSearch(cityNameInEnglish, temperatureInCelsius, weatherData.weather[0].description, localDateString, localTime);\n      }\n    } catch (error) {\n      setError('Weather data not found');\n      setWeather(null);\n    }\n  };\n  const handleSearch = async city => {\n    try {\n      const geocodeResponse = await axios.get(`http://api.openweathermap.org/geo/1.0/direct`, {\n        params: {\n          q: city,\n          limit: 1,\n          appid: process.env.REACT_APP_OPENWEATHER_API_KEY\n        }\n      });\n      const cityNameInEnglish = geocodeResponse.data[0].name;\n      const {\n        lat,\n        lon\n      } = geocodeResponse.data[0];\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\n        params: {\n          lat: lat,\n          lon: lon,\n          units: 'metric',\n          appid: process.env.REACT_APP_OPENWEATHER_API_KEY\n        }\n      });\n      const weatherData = response.data;\n      const timezoneOffset = weatherData.timezone;\n      const utcTime = Date.now() + new Date().getTimezoneOffset() * 60000;\n      const localDate = new Date(utcTime + timezoneOffset * 1000);\n      const localTime = localDate.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      const localDateString = `${localDate.toLocaleDateString([], {\n        month: 'long',\n        day: 'numeric'\n      })} (${localDate.toLocaleDateString([], {\n        weekday: 'short'\n      })})`;\n      setSearchedWeather({\n        ...weatherData,\n        name: cityNameInEnglish,\n        localTime,\n        localDateString\n      });\n      setSearchError('');\n      setWeather(null);\n      if (user) {\n        await saveSearch(cityNameInEnglish, weatherData.main.temp, weatherData.weather[0].description, localDateString, localTime);\n      }\n    } catch (error) {\n      setSearchError('City not found');\n      setSearchedWeather(null);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (city) {\n      handleSearch(city);\n    }\n  };\n  const saveSearch = async (city, temperature, description, localDateString, localTime) => {\n    try {\n      await axios.post('/api/users/search', {\n        userId: user._id,\n        city,\n        temperature,\n        description,\n        localDateString,\n        localTime\n      });\n      setSearches(prevSearches => [{\n        city,\n        temperature,\n        description,\n        localDateString,\n        localTime\n      }, ...prevSearches]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handlePageClick = data => {\n    setCurrentPage(data.selected);\n  };\n  const offset = currentPage * itemsPerPage;\n  const currentSearches = searches.slice(offset, offset + itemsPerPage);\n  const pageCount = Math.ceil(searches.length / itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    style: {\n      display: 'flex',\n      color: 'black'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: user && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Hello, \", user.username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainpage-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: city,\n            onChange: e => setCity(e.target.value),\n            placeholder: \"Enter city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Get Weather\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [weather.name, \" Weather\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"temp\",\n          children: [weather.main.temp, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: weather.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Local date: \", weather.localDateString]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Local time: \", weather.localTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), searchError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: searchError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }, this), searchedWeather && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [searchedWeather.name, \" Weather\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"temp\",\n          children: [searchedWeather.main.temp, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: searchedWeather.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Local date: \", searchedWeather.localDateString]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Local time: \", searchedWeather.localTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), user && searches.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-history\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), currentSearches.map((search, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [offset + index + 1, \". \", search.city, \" : \", search.temperature, \" \\xB0C, \", search.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [search.localDateString, \", \", search.localTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          previousLabel: '«',\n          nextLabel: '»',\n          breakLabel: '...',\n          breakClassName: 'break-me',\n          pageCount: pageCount,\n          marginPagesDisplayed: 0,\n          pageRangeDisplayed: 5,\n          onPageChange: handlePageClick,\n          containerClassName: 'pagination',\n          subContainerClassName: 'pages pagination',\n          activeClassName: 'active'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      className: \"map-container\",\n      center: [20, 0],\n      zoom: 3,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), cities.map(city => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [city.lat, city.lon],\n        icon: customIcon,\n        eventHandlers: {\n          click: () => {\n            getWeather(city.lat, city.lon);\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: city.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)\n      }, city.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"cTJrjnFGiOfml3YBCKT6xnjyorY=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","MapContainer","TileLayer","Marker","Popup","L","cities","ReactPaginate","jsxDEV","_jsxDEV","customIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","shadowUrl","shadowSize","MainPage","user","_s","weather","setWeather","error","setError","city","setCity","searchedWeather","setSearchedWeather","searchError","setSearchError","searches","setSearches","currentPage","setCurrentPage","itemsPerPage","reverse","getWeather","lat","lon","geocodeResponse","get","params","limit","appid","process","env","REACT_APP_OPENWEATHER_API_KEY","cityNameInEnglish","data","name","response","weatherData","temperatureInCelsius","main","temp","toFixed","timezoneOffset","timezone","utcTime","Date","now","getTimezoneOffset","localDate","localTime","toLocaleTimeString","hour","minute","localDateString","toLocaleDateString","month","day","weekday","saveSearch","description","handleSearch","q","units","handleSubmit","e","preventDefault","temperature","post","userId","_id","prevSearches","err","console","handlePageClick","selected","offset","currentSearches","slice","pageCount","Math","ceil","length","className","style","display","color","children","username","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","map","search","index","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","center","zoom","url","position","icon","eventHandlers","click","_c","$RefreshReg$"],"sources":["/Users/seolheekang/Desktop/tvo/weather-app/client/src/components/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport L from 'leaflet'\nimport './MainPage.css'\nimport cities from '../assets/cities.json'\nimport ReactPaginate from 'react-paginate'\n\nconst customIcon = new L.Icon({\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n  shadowSize: [41, 41],\n})\n\nconst MainPage = ({ user }) => {\n  const [weather, setWeather] = useState(null)\n  const [error, setError] = useState('')\n  const [city, setCity] = useState('')\n  const [searchedWeather, setSearchedWeather] = useState(null)\n  const [searchError, setSearchError] = useState('')\n  const [searches, setSearches] = useState(user ? user.searches : [])\n  const [currentPage, setCurrentPage] = useState(0)\n  const itemsPerPage = 5\n\n  useEffect(() => {\n    if (user && user.searches) {\n      setSearches([...user.searches].reverse())\n    }\n  }, [user])  \n\n  const getWeather = async (lat, lon) => {\n    try {\n      const geocodeResponse = await axios.get(`http://api.openweathermap.org/geo/1.0/reverse`, {\n        params: {\n          lat: lat,\n          lon: lon,\n          limit: 1,\n          appid: process.env.REACT_APP_OPENWEATHER_API_KEY,\n        },\n      })\n      const cityNameInEnglish = geocodeResponse.data[0].name\n  \n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\n        params: {\n          lat: lat,\n          lon: lon,\n          appid: process.env.REACT_APP_OPENWEATHER_API_KEY,\n        },\n      })\n      const weatherData = response.data\n      const temperatureInCelsius = (weatherData.main.temp - 273.15).toFixed(1)\n      const timezoneOffset = weatherData.timezone\n      const utcTime = Date.now() + new Date().getTimezoneOffset() * 60000\n      const localDate = new Date(utcTime + timezoneOffset * 1000)\n      const localTime = localDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n      const localDateString = `${localDate.toLocaleDateString([], { month: 'long', day: 'numeric' })} (${localDate.toLocaleDateString([], { weekday: 'short' })})`\n  \n      setWeather({ ...weatherData, name: cityNameInEnglish, main: { ...weatherData.main, temp: temperatureInCelsius }, localTime, localDateString })\n      setError('')\n      setSearchedWeather(null)\n      if (user) {\n        await saveSearch(cityNameInEnglish, temperatureInCelsius, weatherData.weather[0].description, localDateString, localTime)\n      }\n    } catch (error) {\n      setError('Weather data not found')\n      setWeather(null)\n    }\n  }\n  \n\n  const handleSearch = async (city) => {\n    try {\n      const geocodeResponse = await axios.get(`http://api.openweathermap.org/geo/1.0/direct`, {\n        params: {\n          q: city,\n          limit: 1,\n          appid: process.env.REACT_APP_OPENWEATHER_API_KEY,\n        },\n      })\n      const cityNameInEnglish = geocodeResponse.data[0].name\n      const { lat, lon } = geocodeResponse.data[0]\n  \n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\n        params: {\n          lat: lat,\n          lon: lon,\n          units: 'metric',\n          appid: process.env.REACT_APP_OPENWEATHER_API_KEY,\n        },\n      })\n      const weatherData = response.data\n      const timezoneOffset = weatherData.timezone\n      const utcTime = Date.now() + new Date().getTimezoneOffset() * 60000\n      const localDate = new Date(utcTime + timezoneOffset * 1000)\n      const localTime = localDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n      const localDateString = `${localDate.toLocaleDateString([], { month: 'long', day: 'numeric' })} (${localDate.toLocaleDateString([], { weekday: 'short' })})`\n  \n      setSearchedWeather({ ...weatherData, name: cityNameInEnglish, localTime, localDateString })\n      setSearchError('')\n      setWeather(null)\n      if (user) {\n        await saveSearch(cityNameInEnglish, weatherData.main.temp, weatherData.weather[0].description, localDateString, localTime)\n      }\n    } catch (error) {\n      setSearchError('City not found')\n      setSearchedWeather(null)\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (city) {\n      handleSearch(city)\n    }\n  }\n\n  const saveSearch = async (city, temperature, description, localDateString, localTime) => {\n    try {\n      await axios.post('/api/users/search', {\n        userId: user._id,\n        city,\n        temperature,\n        description,\n        localDateString,\n        localTime,\n      })\n      setSearches((prevSearches) => [\n        { city, temperature, description, localDateString, localTime },\n        ...prevSearches,\n      ])\n    } catch (err) {\n      console.error(err)\n    }\n  }\n  \n\n  const handlePageClick = (data) => {\n    setCurrentPage(data.selected)\n  }\n\n  const offset = currentPage * itemsPerPage\n  const currentSearches = searches.slice(offset, offset + itemsPerPage)\n  const pageCount = Math.ceil(searches.length / itemsPerPage)\n\n  return (\n    <div className=\"main-page\" style={{ display: 'flex', color: 'black' }}>\n      <div className=\"sidebar\">\n        <div className=\"sidebar-header\"> \n          {user && <h2>Hello, {user.username}!</h2>}\n        </div>\n        <div className=\"mainpage-form-container\">\n          <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={city} onChange={(e) => setCity(e.target.value)} placeholder=\"Enter city\" />\n            <button type=\"submit\">Get Weather</button>\n          </form>\n        </div>\n        {error && <p>{error}</p>}\n        {weather && (\n          <div className=\"weather-container\">\n            <h2>{weather.name} Weather</h2>\n            <p className=\"temp\">{weather.main.temp} °C</p>\n            <p className=\"description\">{weather.weather[0].description}</p>\n            <p>Local date: {weather.localDateString}</p>\n            <p>Local time: {weather.localTime}</p>\n          </div>\n        )}\n        {searchError && <p>{searchError}</p>}\n        {searchedWeather && (\n          <div className=\"weather-container\">\n            <h2>{searchedWeather.name} Weather</h2>\n            <p className=\"temp\">{searchedWeather.main.temp} °C</p>\n            <p className=\"description\">{searchedWeather.weather[0].description}</p>\n            <p>Local date: {searchedWeather.localDateString}</p>\n            <p>Local time: {searchedWeather.localTime}</p>\n          </div>\n        )}\n        {user && searches.length > 0 && (\n          <div className=\"search-history\">\n            <h2>Search History</h2>\n            {currentSearches.map((search, index) => (\n              <div key={index} className=\"search-item\">\n                <div>\n                  <p>{offset + index + 1}. {search.city} : {search.temperature} °C, {search.description}</p>\n                  <p>{search.localDateString}, {search.localTime}</p>\n                </div>\n              </div>\n            ))}\n            <ReactPaginate\n              previousLabel={'«'}\n              nextLabel={'»'}\n              breakLabel={'...'}\n              breakClassName={'break-me'}\n              pageCount={pageCount}\n              marginPagesDisplayed={0}\n              pageRangeDisplayed={5}\n              onPageChange={handlePageClick}\n              containerClassName={'pagination'}\n              subContainerClassName={'pages pagination'}\n              activeClassName={'active'}\n            />\n          </div>\n        )}\n      </div>\n      <MapContainer className=\"map-container\" center={[20, 0]} zoom={3}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {cities.map((city) => (\n          <Marker\n            key={city.name}\n            position={[city.lat, city.lon]}\n            icon={customIcon}\n            eventHandlers={{\n              click: () => {\n                getWeather(city.lat, city.lon)\n              },\n            }}\n          >\n            <Popup>{city.name}</Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </div>\n  )\n}\n\nexport default MainPage\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}